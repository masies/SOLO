{"ast":null,"code":"import _classCallCheck from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/MS/Desktop/uni/stage/tiascolto/src/components/solution/Solution.js\";\nimport React from 'react';\nimport './Solution.css';\nimport NoteGuess from './NoteGuess/NoteGuess';\n\nvar Solution =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Solution, _React$Component);\n\n  function Solution(props) {\n    var _this;\n\n    _classCallCheck(this, Solution);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Solution).call(this, props));\n\n    _this.onClickFunction = function (idx) {\n      // set the state to only have a current word selection which will unselect the previous selection\n      _this.setState({\n        activeWord: idx\n      });\n    };\n\n    _this.state = {\n      words: [],\n      activeWord: -1\n    };\n    return _this;\n  }\n\n  _createClass(Solution, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, [0, 1, 2, 3, 4, 5].map(function (k, h) {\n        return React.createElement(NoteGuess, {\n          key: h,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Solution;\n}(React.Component);\n\nexport default Solution;","map":{"version":3,"sources":["/Users/MS/Desktop/uni/stage/tiascolto/src/components/solution/Solution.js"],"names":["React","NoteGuess","Solution","props","onClickFunction","idx","setState","activeWord","state","words","map","k","h","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;IAGMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACb,kFAAMA,KAAN;;AADa,UAKnBC,eALmB,GAKD,UAACC,GAAD,EAAS;AACrB;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAEF;AAAb,OAAd;AACL,KARkB;;AAEb,UAAKG,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaF,MAAAA,UAAU,EAAE,CAAC;AAA1B,KAAb;AAFa;AAGhB;;;;6BAOM;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAcG,GAAd,CAAkB,UAACC,CAAD,EAAGC,CAAH,EAAS;AAC1B,eAAO,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACF,OAFC,CAFF,CADF;AASD;;;;EArBoBZ,KAAK,CAACa,S;;AAwB7B,eAAeX,QAAf","sourcesContent":["import React from 'react';\nimport './Solution.css';\nimport NoteGuess from './NoteGuess/NoteGuess';\n\n\nclass Solution extends React.Component {\n  constructor(props) {\n        super(props);\n        this.state = { words: [], activeWord: -1 }\n    }\n\n  onClickFunction = (idx) => {\n        // set the state to only have a current word selection which will unselect the previous selection\n        this.setState({activeWord: idx})\n  }\n\n  render() {\n    return (\n      <div>\n      {\n        [0,1,2,3,4,5].map((k,h) => {\n         return <NoteGuess key={h}/>\n      })\n      }\n      </div>\n      );\n  }\n}\n\nexport default Solution;"]},"metadata":{},"sourceType":"module"}