{"ast":null,"code":"import _classCallCheck from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/MS/Desktop/uni/stage/tiascolto/src/components/keyboard/Keyboard.js\";\nimport React from 'react';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\nimport classNames from 'classnames';\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\nimport PianoConfig from './PianoConfig';\nvar instrument_list = [\"accordion\", \"acoustic_bass\", \"acoustic_grand_piano\", \"acoustic_guitar_nylon\", \"acoustic_guitar_steel\", \"agogo\", \"alto_sax\", \"applause\", \"bagpipe\", \"banjo\", \"baritone_sax\", \"bassoon\", \"bird_tweet\", \"blown_bottle\", \"brass_section\", \"breath_noise\", \"bright_acoustic_piano\", \"celesta\", \"cello\", \"choir_aahs\", \"church_organ\", \"clarinet\", \"clavinet\", \"contrabass\", \"distortion_guitar\", \"drawbar_organ\", \"dulcimer\", \"electric_bass_finger\", \"electric_bass_pick\", \"electric_grand_piano\", \"electric_guitar_clean\", \"electric_guitar_jazz\", \"electric_guitar_muted\", \"electric_piano_1\", \"electric_piano_2\", \"english_horn\", \"fiddle\", \"flute\", \"french_horn\", \"fretless_bass\", \"fx_1_rain\", \"fx_2_soundtrack\", \"fx_3_crystal\", \"fx_4_atmosphere\", \"fx_5_brightness\", \"fx_6_goblins\", \"fx_7_echoes\", \"fx_8_scifi\", \"glockenspiel\", \"guitar_fret_noise\", \"guitar_harmonics\", \"gunshot\", \"harmonica\", \"harpsichord\", \"helicopter\", \"honkytonk_piano\", \"kalimba\", \"koto\", \"lead_1_square\", \"lead_2_sawtooth\", \"lead_3_calliope\", \"lead_4_chiff\", \"lead_5_charang\", \"lead_6_voice\", \"lead_7_fifths\", \"lead_8_bass__lead\", \"marimba\", \"melodic_tom\", \"music_box\", \"muted_trumpet\", \"oboe\", \"ocarina\", \"orchestra_hit\", \"orchestral_harp\", \"overdriven_guitar\", \"pad_1_new_age\", \"pad_2_warm\", \"pad_3_polysynth\", \"pad_4_choir\", \"pad_5_bowed\", \"pad_6_metallic\", \"pad_7_halo\", \"pad_8_sweep\", \"pan_flute\", \"percussion\", \"percussive_organ\", \"piccolo\", \"pizzicato_strings\", \"recorder\", \"reed_organ\", \"reverse_cymbal\", \"rock_organ\", \"seashore\", \"shakuhachi\", \"shamisen\", \"shanai\", \"sitar\", \"slap_bass_1\", \"slap_bass_2\", \"soprano_sax\", \"steel_drums\", \"string_ensemble_1\", \"string_ensemble_2\", \"synth_bass_1\", \"synth_bass_2\", \"synth_brass_1\", \"synth_brass_2\", \"synth_choir\", \"synth_drum\", \"synth_strings_1\", \"synth_strings_2\", \"taiko_drum\", \"tango_accordion\", \"telephone_ring\", \"tenor_sax\", \"timpani\", \"tinkle_bell\", \"tremolo_strings\", \"trombone\", \"trumpet\", \"tuba\", \"tubular_bells\", \"vibraphone\", \"viola\", \"violin\", \"voice_oohs\", \"whistle\", \"woodblock\", \"xylophone\"];\n\nvar Keyboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Keyboard, _React$Component);\n\n  function Keyboard(props) {\n    var _this;\n\n    _classCallCheck(this, Keyboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Keyboard).call(this, props));\n    _this.state = {\n      duration: 3,\n      song: [],\n      activeNotesIndex: 0,\n      isPlaying: false,\n      config: {\n        instrumentName: 'acoustic_grand_piano',\n        noteRange: {\n          first: MidiNumbers.fromNote('c3'),\n          last: MidiNumbers.fromNote('b8')\n        }\n      }\n    };\n\n    _this.setPlaying = function (value) {\n      if (value) {\n        _this.giveMeASong();\n      }\n\n      _this.setState({\n        isPlaying: value\n      });\n    };\n\n    _this.playbackIntervalFn = null;\n    return _this;\n  }\n\n  _createClass(Keyboard, [{\n    key: \"giveMeASong\",\n    value: function giveMeASong() {\n      var newsong = [];\n\n      for (var i = 0; i < 100; i++) {\n        var note_to_push = Math.floor(Math.random() * (this.state.config.noteRange.last - this.state.config.noteRange.first) + this.state.config.noteRange.first);\n        newsong.push([note_to_push]); //add random pause\n\n        if (Math.random() * (2 - 0) + 0 > 1) {\n          newsong.push([]);\n        }\n      }\n\n      this.setState({\n        song: newsong\n      });\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.setState({\n        activeNotesIndex: 0\n      });\n      this.setState({\n        isPlaying: true\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.giveMeASong();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      console.log(duration);\n\n      if (prevState.isPlaying !== this.state.isPlaying) {\n        if (this.state.isPlaying) {\n          this.playbackIntervalFn = setInterval(function () {\n            _this2.setState({\n              activeNotesIndex: (_this2.state.activeNotesIndex + 1) % _this2.state.song.length\n            });\n\n            console.log(_this2.state.song[_this2.state.activeNotesIndex]);\n          }, 200);\n        } else {\n          clearInterval(this.playbackIntervalFn);\n          this.setState({\n            activeNotesIndex: 0\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(SoundfontProvider, {\n        audioContext: this.props.audioContext,\n        instrumentName: this.state.config.instrumentName,\n        hostname: this.props.soundfontHostname,\n        render: function render(_ref) {\n          var isLoading = _ref.isLoading,\n              playNote = _ref.playNote,\n              stopNote = _ref.stopNote;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }, React.createElement(DimensionsProvider, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }, function (_ref2) {\n            var containerWidth = _ref2.containerWidth;\n            return React.createElement(Piano, {\n              activeNotes: _this3.state.isPlaying ? _this3.state.song[_this3.state.activeNotesIndex] : [],\n              noteRange: _this3.state.config.noteRange,\n              playNote: playNote,\n              stopNote: stopNote,\n              width: containerWidth,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 223\n              },\n              __self: this\n            });\n          }), React.createElement(\"div\", {\n            className: \"text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: classNames('btn', {\n              'btn-outline-info': !_this3.state.isPlaying,\n              'btn-outline-danger': _this3.state.isPlaying\n            }),\n            onClick: function onClick() {\n              return _this3.setPlaying(!_this3.state.isPlaying);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236\n            },\n            __self: this\n          }, _this3.state.isPlaying ? 'Stop' : 'Start'), React.createElement(\"button\", {\n            className: classNames('btn', {\n              'btn-outline-info': !_this3.state.isPlaying,\n              'btn-outline-danger': _this3.state.isPlaying\n            }),\n            onClick: function onClick() {\n              return _this3.restart();\n            },\n            disabled: _this3.state.isPlaying,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          }, 'restart'))), React.createElement(PianoConfig, {\n            config: _this3.state.config,\n            setConfig: function setConfig(config) {\n              _this3.setState({\n                config: Object.assign({}, _this3.state.config, config)\n              });\n            },\n            instrumentList: instrument_list || [_this3.state.config.instrumentName],\n            song: _this3.song,\n            duration: _this3.duration,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Keyboard;\n}(React.Component);\n\nexport default Keyboard;","map":{"version":3,"sources":["/Users/MS/Desktop/uni/stage/tiascolto/src/components/keyboard/Keyboard.js"],"names":["React","Piano","MidiNumbers","classNames","DimensionsProvider","SoundfontProvider","PianoConfig","instrument_list","Keyboard","props","state","duration","song","activeNotesIndex","isPlaying","config","instrumentName","noteRange","first","fromNote","last","setPlaying","value","giveMeASong","setState","playbackIntervalFn","newsong","i","note_to_push","Math","floor","random","push","prevProps","prevState","console","log","setInterval","length","clearInterval","audioContext","soundfontHostname","isLoading","playNote","stopNote","containerWidth","restart","Object","assign","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\nimport classNames from 'classnames';\n\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\n\nimport PianoConfig from './PianoConfig';\n\nconst instrument_list= [\n  \"accordion\",\n  \"acoustic_bass\",\n  \"acoustic_grand_piano\",\n  \"acoustic_guitar_nylon\",\n  \"acoustic_guitar_steel\",\n  \"agogo\",\n  \"alto_sax\",\n  \"applause\",\n  \"bagpipe\",\n  \"banjo\",\n  \"baritone_sax\",\n  \"bassoon\",\n  \"bird_tweet\",\n  \"blown_bottle\",\n  \"brass_section\",\n  \"breath_noise\",\n  \"bright_acoustic_piano\",\n  \"celesta\",\n  \"cello\",\n  \"choir_aahs\",\n  \"church_organ\",\n  \"clarinet\",\n  \"clavinet\",\n  \"contrabass\",\n  \"distortion_guitar\",\n  \"drawbar_organ\",\n  \"dulcimer\",\n  \"electric_bass_finger\",\n  \"electric_bass_pick\",\n  \"electric_grand_piano\",\n  \"electric_guitar_clean\",\n  \"electric_guitar_jazz\",\n  \"electric_guitar_muted\",\n  \"electric_piano_1\",\n  \"electric_piano_2\",\n  \"english_horn\",\n  \"fiddle\",\n  \"flute\",\n  \"french_horn\",\n  \"fretless_bass\",\n  \"fx_1_rain\",\n  \"fx_2_soundtrack\",\n  \"fx_3_crystal\",\n  \"fx_4_atmosphere\",\n  \"fx_5_brightness\",\n  \"fx_6_goblins\",\n  \"fx_7_echoes\",\n  \"fx_8_scifi\",\n  \"glockenspiel\",\n  \"guitar_fret_noise\",\n  \"guitar_harmonics\",\n  \"gunshot\",\n  \"harmonica\",\n  \"harpsichord\",\n  \"helicopter\",\n  \"honkytonk_piano\",\n  \"kalimba\",\n  \"koto\",\n  \"lead_1_square\",\n  \"lead_2_sawtooth\",\n  \"lead_3_calliope\",\n  \"lead_4_chiff\",\n  \"lead_5_charang\",\n  \"lead_6_voice\",\n  \"lead_7_fifths\",\n  \"lead_8_bass__lead\",\n  \"marimba\",\n  \"melodic_tom\",\n  \"music_box\",\n  \"muted_trumpet\",\n  \"oboe\",\n  \"ocarina\",\n  \"orchestra_hit\",\n  \"orchestral_harp\",\n  \"overdriven_guitar\",\n  \"pad_1_new_age\",\n  \"pad_2_warm\",\n  \"pad_3_polysynth\",\n  \"pad_4_choir\",\n  \"pad_5_bowed\",\n  \"pad_6_metallic\",\n  \"pad_7_halo\",\n  \"pad_8_sweep\",\n  \"pan_flute\",\n  \"percussion\",\n  \"percussive_organ\",\n  \"piccolo\",\n  \"pizzicato_strings\",\n  \"recorder\",\n  \"reed_organ\",\n  \"reverse_cymbal\",\n  \"rock_organ\",\n  \"seashore\",\n  \"shakuhachi\",\n  \"shamisen\",\n  \"shanai\",\n  \"sitar\",\n  \"slap_bass_1\",\n  \"slap_bass_2\",\n  \"soprano_sax\",\n  \"steel_drums\",\n  \"string_ensemble_1\",\n  \"string_ensemble_2\",\n  \"synth_bass_1\",\n  \"synth_bass_2\",\n  \"synth_brass_1\",\n  \"synth_brass_2\",\n  \"synth_choir\",\n  \"synth_drum\",\n  \"synth_strings_1\",\n  \"synth_strings_2\",\n  \"taiko_drum\",\n  \"tango_accordion\",\n  \"telephone_ring\",\n  \"tenor_sax\",\n  \"timpani\",\n  \"tinkle_bell\",\n  \"tremolo_strings\",\n  \"trombone\",\n  \"trumpet\",\n  \"tuba\",\n  \"tubular_bells\",\n  \"vibraphone\",\n  \"viola\",\n  \"violin\",\n  \"voice_oohs\",\n  \"whistle\",\n  \"woodblock\",\n  \"xylophone\"]\n\nclass Keyboard extends React.Component {\n\n  state = {\n    duration : 3,\n    song: [],\n    activeNotesIndex: 0,\n    isPlaying: false,\n    config: {\n      instrumentName: 'acoustic_grand_piano',\n      noteRange: {\n        first: MidiNumbers.fromNote('c3'),\n        last: MidiNumbers.fromNote('b8'),\n      },\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.playbackIntervalFn = null;\n  }\n\n  giveMeASong () {\n    let newsong = [];\n    for (var i = 0; i < 100; i++) {\n      let note_to_push = Math.floor(Math.random() * (this.state.config.noteRange.last - this.state.config.noteRange.first) + this.state.config.noteRange.first)\n      newsong.push([note_to_push]);\n      //add random pause\n      if (Math.random() * (2 - 0) + 0 > 1){\n        newsong.push([]);\n      }\n    }\n    this.setState({song: newsong})\n  }\n\n  \n  restart(){\n    this.setState({\n          activeNotesIndex: 0,\n        });\n    this.setState({ isPlaying: true });\n  }\n\n  setPlaying = (value) => {\n    if (value) { this.giveMeASong(); }\n    this.setState({ isPlaying: value });\n  };\n\n  componentDidMount(){\n    this.giveMeASong();\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(duration)\n    if (prevState.isPlaying !== this.state.isPlaying) {\n      if (this.state.isPlaying) {\n        this.playbackIntervalFn = setInterval(() => {\n          this.setState({\n            activeNotesIndex: (this.state.activeNotesIndex + 1) % this.state.song.length,\n          });\n          console.log(this.state.song[this.state.activeNotesIndex])\n        }, 200);\n      } else {\n        clearInterval(this.playbackIntervalFn);\n        this.setState({\n          activeNotesIndex: 0,\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <SoundfontProvider\n        audioContext={this.props.audioContext}\n        instrumentName={this.state.config.instrumentName}\n        hostname={this.props.soundfontHostname}\n        render={({ isLoading, playNote, stopNote }) => (\n        <div>\n          <DimensionsProvider>\n              {({ containerWidth }) => (\n                <Piano\n                  activeNotes={\n                      this.state.isPlaying ? this.state.song[this.state.activeNotesIndex] : []\n                    }\n                  noteRange={this.state.config.noteRange}\n                  playNote={playNote}\n                  stopNote={stopNote}\n                  width={containerWidth}\n                />\n              )}\n          </DimensionsProvider>\n          <div className=\"text-center\">\n          <div>\n            <button\n              className={classNames('btn', {\n                'btn-outline-info': !this.state.isPlaying,\n                'btn-outline-danger': this.state.isPlaying,\n              })}\n              onClick={() => this.setPlaying(!this.state.isPlaying)}\n            >\n              {this.state.isPlaying ? 'Stop' : 'Start'}\n            </button>\n\n            <button\n              className={classNames('btn', {\n                'btn-outline-info': !this.state.isPlaying,\n                'btn-outline-danger': this.state.isPlaying,\n              })}\n              onClick={() => this.restart()}\n              disabled={this.state.isPlaying}\n            >\n              {'restart' }\n            </button>\n\n          </div>\n        </div>\n          <PianoConfig\n              config={this.state.config}\n              setConfig={(config) => {\n                this.setState({\n                  config: Object.assign({}, this.state.config, config),\n                });\n              }}\n              instrumentList={instrument_list || [this.state.config.instrumentName]}\n              song={this.song}\n              duration = {this.duration}\n          />\n        </div>\n        )}\n      />\n       \n    );\n  }\n}\n\nexport default Keyboard;\n\n"]},"metadata":{},"sourceType":"module"}