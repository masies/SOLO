{"ast":null,"code":"import _objectWithoutProperties from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/MS/Desktop/uni/stage/tiascolto/src/components/keyboard/PianoConfig.js\";\nimport React from 'react';\nimport { MidiNumbers } from 'react-piano';\n\nvar AutoblurSelect =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoblurSelect, _React$Component);\n\n  function AutoblurSelect(props) {\n    var _this;\n\n    _classCallCheck(this, AutoblurSelect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoblurSelect).call(this, props));\n\n    _this.onChange = function (event) {\n      _this.props.onChange(event);\n\n      _this.selectRef.current.blur();\n    };\n\n    _this.selectRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(AutoblurSelect, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          onChange = _this$props.onChange,\n          otherProps = _objectWithoutProperties(_this$props, [\"children\", \"onChange\"]);\n\n      return React.createElement(\"select\", Object.assign({}, otherProps, {\n        onChange: this.onChange,\n        ref: this.selectRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), children);\n    }\n  }]);\n\n  return AutoblurSelect;\n}(React.Component);\n\nfunction Label(props) {\n  return React.createElement(\"small\", {\n    className: \"mb-1 text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.children);\n}\n\nvar PianoConfig =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(PianoConfig, _React$Component2);\n\n  function PianoConfig() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, PianoConfig);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PianoConfig)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      showInstrument: true\n    };\n\n    _this2.onChangeFirstNote = function (event) {\n      _this2.props.setConfig({\n        noteRange: {\n          first: parseInt(event.target.value, 10),\n          last: _this2.props.config.noteRange.last\n        }\n      });\n    };\n\n    _this2.onChangeLastNote = function (event) {\n      _this2.props.setConfig({\n        noteRange: {\n          first: _this2.props.config.noteRange.first,\n          last: parseInt(event.target.value, 10)\n        }\n      });\n    };\n\n    _this2.onChangeDuration = function (event) {\n      _this2.props.setConfig({\n        duration: event.target.value\n      });\n    };\n\n    _this2.onChangeInstrument = function (event) {\n      _this2.props.setConfig({\n        instrumentName: event.target.value,\n        noteRange: {\n          first: _this2.props.instrumentList[event.target.value].first,\n          last: _this2.props.instrumentList[event.target.value].last\n        }\n      });\n    };\n\n    _this2.showInstrument = function (event) {\n      _this2.setState({\n        showInstrument: !_this2.state.showInstrument\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(PianoConfig, [{\n    key: \"render\",\n    value: function render() {\n      var midiNumbersToNotes = MidiNumbers.NATURAL_MIDI_NUMBERS.reduce(function (obj, midiNumber) {\n        obj[midiNumber] = MidiNumbers.getAttributes(midiNumber).note;\n        return obj;\n      }, {});\n      var _this$props$config = this.props.config,\n          noteRange = _this$props$config.noteRange,\n          instrumentName = _this$props$config.instrumentName,\n          duration = _this$props$config.duration;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"First note\"), React.createElement(AutoblurSelect, {\n        className: \"form-control\",\n        onChange: this.onChangeFirstNote,\n        value: noteRange.first,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, MidiNumbers.NATURAL_MIDI_NUMBERS.map(function (midiNumber) {\n        return React.createElement(\"option\", {\n          value: midiNumber,\n          disabled: midiNumber >= noteRange.last || midiNumber < 24,\n          key: midiNumber,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, midiNumbersToNotes[midiNumber]);\n      }))), React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Last note\"), React.createElement(AutoblurSelect, {\n        className: \"form-control\",\n        onChange: this.onChangeLastNote,\n        value: noteRange.last,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, MidiNumbers.NATURAL_MIDI_NUMBERS.map(function (midiNumber) {\n        return React.createElement(\"option\", {\n          value: midiNumber,\n          disabled: midiNumber <= noteRange.first || midiNumber > 107,\n          key: midiNumber,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, midiNumbersToNotes[midiNumber]);\n      }))), React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Instrument\"), React.createElement(AutoblurSelect, {\n        className: \"form-control\",\n        value: instrumentName,\n        onChange: this.onChangeInstrument,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, Object.keys(this.props.instrumentList).map(function (value) {\n        return React.createElement(\"option\", {\n          value: value,\n          key: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, value);\n      }))), React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Duration\"), React.createElement(AutoblurSelect, {\n        className: \"form-control\",\n        onChange: this.onChangeDuration,\n        value: duration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, [1, 2, 3, 4, 5, \"random\"].map(function (i, j) {\n        return React.createElement(\"option\", {\n          value: j + 1,\n          key: j,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, i);\n      })))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Show pitch\")), React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Show solution\")), React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.showInstrument,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Show instrument \\\\s\"), this.state.showInstrument ? React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.props.instrumentName) : null)));\n    }\n  }]);\n\n  return PianoConfig;\n}(React.Component);\n\nexport default PianoConfig;","map":{"version":3,"sources":["/Users/MS/Desktop/uni/stage/tiascolto/src/components/keyboard/PianoConfig.js"],"names":["React","MidiNumbers","AutoblurSelect","props","onChange","event","selectRef","current","blur","createRef","children","otherProps","Component","Label","PianoConfig","state","showInstrument","onChangeFirstNote","setConfig","noteRange","first","parseInt","target","value","last","config","onChangeLastNote","onChangeDuration","duration","onChangeInstrument","instrumentName","instrumentList","setState","midiNumbersToNotes","NATURAL_MIDI_NUMBERS","reduce","obj","midiNumber","getAttributes","note","map","Object","keys","i","j"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { MidiNumbers } from 'react-piano';\n\nclass AutoblurSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectRef = React.createRef();\n  }\n\n  onChange = (event) => {\n    this.props.onChange(event);\n    this.selectRef.current.blur();\n  };\n\n  render() {\n    const { children, onChange, ...otherProps } = this.props;\n    return (\n      <select {...otherProps} onChange={this.onChange} ref={this.selectRef}>\n        {children}\n      </select>\n    );\n  }\n}\n\nfunction Label(props) {\n  return <small className=\"mb-1 text-muted\">{props.children}</small>;\n}\n\nclass PianoConfig extends React.Component {\n\n  state = {\n    showInstrument : true\n  }\n\n  onChangeFirstNote = (event) => {\n    this.props.setConfig({\n      noteRange: {\n        first: parseInt(event.target.value, 10),\n        last: this.props.config.noteRange.last,\n      },\n    });\n  };\n\n  onChangeLastNote = (event) => {\n    this.props.setConfig({\n      noteRange: {\n        first: this.props.config.noteRange.first,\n        last: parseInt(event.target.value, 10),\n      },\n    });\n  };\n\n  onChangeDuration = (event) => {\n    this.props.setConfig({\n      duration: event.target.value\n    });\n  };\n\n  onChangeInstrument = (event) => {\n    this.props.setConfig({\n      instrumentName: event.target.value,\n      noteRange: {\n        first: this.props.instrumentList[event.target.value].first,\n        last: this.props.instrumentList[event.target.value].last\n      }\n    });\n  };\n\n  showInstrument = (event) => {\n      this.setState({\n        showInstrument : !this.state.showInstrument\n      });\n  }\n\n  render() {\n    const midiNumbersToNotes = MidiNumbers.NATURAL_MIDI_NUMBERS.reduce((obj, midiNumber) => {\n      obj[midiNumber] = MidiNumbers.getAttributes(midiNumber).note;\n      return obj;\n    }, {});\n    const { noteRange, instrumentName, duration } = this.props.config;\n\n    return (\n      <div>\n      <div className=\"form-row\">\n        <div className=\"col-3\">\n          <Label>First note</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            onChange={this.onChangeFirstNote}\n            value={noteRange.first}\n          >\n            {MidiNumbers.NATURAL_MIDI_NUMBERS.map((midiNumber) => (\n              <option value={midiNumber} disabled={midiNumber >= noteRange.last || midiNumber < 24} key={midiNumber}>\n                {midiNumbersToNotes[midiNumber]}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col-3\">\n          <Label>Last note</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            onChange={this.onChangeLastNote}\n            value={noteRange.last}\n          >\n            {MidiNumbers.NATURAL_MIDI_NUMBERS.map((midiNumber) => (\n              <option value={midiNumber} disabled={midiNumber <= noteRange.first || midiNumber > 107} key={midiNumber}>\n                {midiNumbersToNotes[midiNumber]}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col-3\">\n          <Label>Instrument</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            value={instrumentName}\n            onChange={this.onChangeInstrument}\n          >\n            {Object.keys(this.props.instrumentList).map((value) => (\n              <option value={value} key={value}>\n                {value}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n\n        <div className=\"col-3\">\n          <Label>Duration</Label>\n          <AutoblurSelect className=\"form-control\" onChange={this.onChangeDuration} value={duration}>\n            {\n              [1,2,3,4,5,\"random\"].map((i,j) => {\n                 return <option value={j+1}  key={j}>\n                      {i}\n                  </option>\n              })\n            }\n          </AutoblurSelect>\n         \n          \n\n        </div>\n        </div>\n        <div className=\"form-row\">\n          <div className=\"col-3\">\n            <input type=\"checkbox\"  />\n            <Label>Show pitch</Label>\n          </div>\n          <div className=\"col-3\">\n            <input type=\"checkbox\" />\n            <Label>Show solution</Label>\n          </div>\n          <div className=\"col-3\">\n            <input type=\"checkbox\" onChange={this.showInstrument}/>\n            <Label>Show instrument \\s</Label>\n            { this.state.showInstrument ? <Label>{this.props.instrumentName}</Label> :  null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PianoConfig;\n"]},"metadata":{},"sourceType":"module"}