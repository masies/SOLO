{"ast":null,"code":"import _classCallCheck from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/MS/Desktop/uni/stage/tiascolto/src/components/solution/Solution.js\";\nimport React from 'react';\nimport './Solution.css';\nimport NoteGuess from './NoteGuess/NoteGuess';\n\nvar Solution =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Solution, _React$Component);\n\n  function Solution(props) {\n    var _this;\n\n    _classCallCheck(this, Solution);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Solution).call(this, props));\n\n    _this.onArrowPressed = function (idx) {\n      _this.setState({\n        activeComponent: idx\n      });\n\n      console.log(\"active div is : \" + _this.state.activeComponent);\n    };\n\n    _this.handleKeyPress = function (event) {\n      if (event.key == 'ArrowLeft') {\n        console.log(\"left\");\n\n        _this.setState({\n          activeComponent: _this.state.activeComponent - 1\n        });\n      } else if (event.key == 'ArrowRight') {\n        console.log(\"right\");\n\n        _this.setState({\n          activeComponent: _this.state.activeComponent + 1\n        });\n      }\n    };\n\n    _this.state = {\n      components: [],\n      activeComponent: 1\n    };\n    return _this;\n  }\n\n  _createClass(Solution, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.state.activeComponent);\n      window.addEventListener(\"keydown\", this.handleKeyPress);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"keydown\", this.handleKeyPress);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var divDisplay = {\n        display: 'flex'\n      };\n      return React.createElement(\"div\", {\n        style: divDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, [0, 1, 2, 3, 4, 5].map(function (term, index) {\n        return React.createElement(NoteGuess, {\n          key: index,\n          selected: _this2.state.activeComponent === index ? 1 : 0,\n          answer: term // onMouseMove={this.onArrowPressed.bind(null, index)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Solution;\n}(React.Component);\n\nexport default Solution;","map":{"version":3,"sources":["/Users/MS/Desktop/uni/stage/tiascolto/src/components/solution/Solution.js"],"names":["React","NoteGuess","Solution","props","onArrowPressed","idx","setState","activeComponent","console","log","state","handleKeyPress","event","key","components","window","addEventListener","removeEventListener","divDisplay","display","map","term","index","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACb,kFAAMA,KAAN;;AADa,UASnBC,cATmB,GASF,UAACC,GAAD,EAAS;AACxB,YAAKC,QAAL,CAAc;AAACC,QAAAA,eAAe,EAAEF;AAAlB,OAAd;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqB,MAAKC,KAAL,CAAWH,eAA5C;AACD,KAZkB;;AAAA,UAcnBI,cAdmB,GAcF,UAACC,KAAD,EAAW;AAC1B,UAAIA,KAAK,CAACC,GAAN,IAAa,WAAjB,EAA8B;AAC1BL,QAAAA,OAAO,CAACC,GAAR,CAAa,MAAb;;AACA,cAAKH,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAG,MAAKG,KAAL,CAAWH,eAAX,GAA6B;AADnC,SAAd;AAGH,OALD,MAMK,IAAIK,KAAK,CAACC,GAAN,IAAa,YAAjB,EAA+B;AAChCL,QAAAA,OAAO,CAACC,GAAR,CAAa,OAAb;;AACA,cAAKH,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAG,MAAKG,KAAL,CAAWH,eAAX,GAA6B;AADnC,SAAd;AAGH;AACF,KA3BkB;;AAEb,UAAKG,KAAL,GAAa;AACXI,MAAAA,UAAU,EAAE,EADD;AAEXP,MAAAA,eAAe,EAAE;AAFN,KAAb;AAFa;AAOlB;;;;wCAsBkB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,eAAvB;AACAQ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKL,cAAxC;AACD;;;2CAEqB;AACpBI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsC,KAAKN,cAA3C;AACD;;;6BAEQ;AAAA;;AACP,UAAIO,UAAU,GAAG;AACfC,QAAAA,OAAO,EAAG;AADK,OAAjB;AAGA,aACE;AAAK,QAAA,KAAK,EAAED,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAcE,GAAd,CAAkB,UAACC,IAAD,EAAMC,KAAN,EAAgB;AAChC,eAAO,oBAAC,SAAD;AACP,UAAA,GAAG,EAAEA,KADE;AAEP,UAAA,QAAQ,EAAK,MAAI,CAACZ,KAAL,CAAWH,eAAX,KAA+Be,KAA/B,GAAwC,CAAxC,GAA4C,CAFlD;AAGP,UAAA,MAAM,EAAID,IAHH,CAIP;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,OAPD,CAFF,CADF;AAcD;;;;EAzDoBrB,KAAK,CAACuB,S;;AA4D7B,eAAerB,QAAf","sourcesContent":["import React from 'react';\nimport './Solution.css';\nimport NoteGuess from './NoteGuess/NoteGuess';\n\nclass Solution extends React.Component {\n  constructor(props) {\n        super(props);\n        this.state = { \n          components: [], \n          activeComponent: 1\n        }\n\n  }\n\n  onArrowPressed = (idx) => {\n    this.setState({activeComponent: idx})\n    console.log(\"active div is : \" + this.state.activeComponent);\n  }\n\n  handleKeyPress = (event) => {\n    if (event.key == 'ArrowLeft') {\n        console.log( \"left\");\n        this.setState({\n          activeComponent : this.state.activeComponent - 1\n        });\n    }\n    else if (event.key == 'ArrowRight') {\n        console.log( \"right\");\n        this.setState({\n          activeComponent : this.state.activeComponent + 1\n        });\n    }\n  };\n\n  componentDidMount(){\n    console.log(this.state.activeComponent)\n    window.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  componentWillUnmount(){\n    window.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  render() {\n    var divDisplay = {\n      display : 'flex'   \n    }\n    return (\n      <div style={divDisplay}>\n      {\n        [0,1,2,3,4,5].map((term,index) => {\n          return <NoteGuess \n          key={index}\n          selected = { this.state.activeComponent === index ?  1 : 0}\n          answer = {term} \n          // onMouseMove={this.onArrowPressed.bind(null, index)}\n          />\n        })\n      }\n      </div>\n    );\n  }\n}\n\nexport default Solution;"]},"metadata":{},"sourceType":"module"}