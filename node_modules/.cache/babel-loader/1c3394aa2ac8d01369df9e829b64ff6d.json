{"ast":null,"code":"import _classCallCheck from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/MS/Desktop/uni/stage/tiascolto/src/components/keyboard/Keyboard.js\";\nimport React from 'react';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\nimport classNames from 'classnames';\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\nimport PianoConfig from './PianoConfig';\nvar instrument_list = [\"accordion\", // F2 - A6\n\"acoustic_grand_piano\", // da nominare come: gran piano \n\"acoustic_guitar_nylon\", // da nominare come: classical guitar // E2 - B6\n\"acoustic_guitar_steel\", // da nominare come: acoustic guitar // E2 - B6\n\"alto_sax\", // C#3 - G#5 \n\"banjo\", // C3 - A4\n\"baritone_sax\", // C#2 - G#4\n\"bassoon\", \"celesta\", // C3 - F8\n\"cello\", \"church_organ\", // C1 - C7\n\"clarinet\", \"contrabass\", \"distortion_guitar\", // E2 - B6\n\"electric_guitar_clean\", // E2 - B6\n\"electric_piano_1\", // da nominare come: electric piano // stesso range del piano\n\"english_horn\", // E3 - B5\n\"flute\", \"french_horn\", // da nominare come: horn \n\"glockenspiel\", // F5 - D8\n\"lead_1_square\", // full  range\n\"lead_2_sawtooth\", // full  range\n\"marimba\", // C2 - C7\n\"oboe\", \"piccolo\", // D5 - C8\n\"recorder\", // F3 - G6\n\"soprano_sax\", // G#3 - D#6\n\"tenor_sax\", //G#2 - D#6\n\"timpani\", // B1 - C4\n\"trombone\", \"trumpet\", \"tuba\", \"tubular_bells\", // F3 - F5\n\"vibraphone\", \"viola\", \"violin\", \"xylophone\" // F4 - C8\n];\n\nvar Keyboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Keyboard, _React$Component);\n\n  function Keyboard(props) {\n    var _this;\n\n    _classCallCheck(this, Keyboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Keyboard).call(this, props));\n    _this.state = {\n      song: [],\n      activeNotesIndex: 0,\n      isPlaying: false,\n      config: {\n        duration: 3,\n        instrumentName: 'acoustic_grand_piano',\n        noteRange: {\n          first: MidiNumbers.fromNote('c1'),\n          last: MidiNumbers.fromNote('b7')\n        }\n      }\n    };\n\n    _this.setPlaying = function (value) {\n      if (value) {\n        _this.giveMeASong();\n      }\n\n      _this.setState({\n        isPlaying: value\n      });\n    };\n\n    _this.playbackIntervalFn = null;\n    return _this;\n  }\n\n  _createClass(Keyboard, [{\n    key: \"giveMeASong\",\n    value: function giveMeASong() {\n      var newsong = [];\n      var last = this.state.config.noteRange.last;\n      var first = this.state.config.noteRange.first;\n\n      for (var i = 0; i < 10; i++) {\n        var note_to_push = Math.floor(Math.random() * (last - first) + first); //duration selected\n\n        if (this.state.config.duration == 6) {\n          for (var j = 0; j < Math.floor(Math.random() * 5); j++) {\n            newsong.push([note_to_push]);\n          }\n        } else {\n          for (var k = 0; k < this.state.config.duration; k++) {\n            newsong.push([note_to_push]);\n          }\n        } //add random pause\n\n\n        if (Math.random() * (2 - 0) + 0 > 1) {\n          newsong.push([]);\n        }\n      }\n\n      this.setState({\n        song: newsong\n      });\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.setState({\n        activeNotesIndex: 0\n      });\n      this.setState({\n        isPlaying: true\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.giveMeASong();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (prevState.isPlaying !== this.state.isPlaying) {\n        if (this.state.isPlaying) {\n          this.playbackIntervalFn = setInterval(function () {\n            _this2.setState({\n              activeNotesIndex: (_this2.state.activeNotesIndex + 1) % _this2.state.song.length\n            });\n          }, 200);\n        } else {\n          clearInterval(this.playbackIntervalFn);\n          this.setState({\n            activeNotesIndex: 0\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(SoundfontProvider, {\n        audioContext: this.props.audioContext,\n        instrumentName: this.state.config.instrumentName,\n        hostname: this.props.soundfontHostname,\n        render: function render(_ref) {\n          var isLoading = _ref.isLoading,\n              playNote = _ref.playNote,\n              stopNote = _ref.stopNote;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, React.createElement(DimensionsProvider, {\n            height: \"100px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, function (_ref2) {\n            var containerWidth = _ref2.containerWidth;\n            return React.createElement(Piano, {\n              activeNotes: _this3.state.isPlaying ? _this3.state.song[_this3.state.activeNotesIndex] : [],\n              noteRange: _this3.state.config.noteRange,\n              playNote: playNote,\n              stopNote: stopNote,\n              width: containerWidth,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            });\n          }), React.createElement(\"div\", {\n            className: \"text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: classNames('btn', {\n              'btn-outline-info': !_this3.state.isPlaying,\n              'btn-outline-danger': _this3.state.isPlaying\n            }),\n            onClick: function onClick() {\n              return _this3.setPlaying(!_this3.state.isPlaying);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, _this3.state.isPlaying ? 'Stop' : 'Start'), React.createElement(\"button\", {\n            className: classNames('btn', {\n              'btn-outline-info': !_this3.state.isPlaying,\n              'btn-outline-danger': _this3.state.isPlaying\n            }),\n            onClick: function onClick() {\n              return _this3.restart();\n            },\n            disabled: _this3.state.isPlaying,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, 'restart'))), React.createElement(PianoConfig, {\n            config: _this3.state.config,\n            setConfig: function setConfig(config) {\n              _this3.setState({\n                config: Object.assign({}, _this3.state.config, config)\n              });\n            },\n            instrumentList: instrument_list || [_this3.state.config.instrumentName],\n            song: _this3.song,\n            duration: _this3.state.config.duration,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Keyboard;\n}(React.Component);\n\nexport default Keyboard;","map":{"version":3,"sources":["/Users/MS/Desktop/uni/stage/tiascolto/src/components/keyboard/Keyboard.js"],"names":["React","Piano","MidiNumbers","classNames","DimensionsProvider","SoundfontProvider","PianoConfig","instrument_list","Keyboard","props","state","song","activeNotesIndex","isPlaying","config","duration","instrumentName","noteRange","first","fromNote","last","setPlaying","value","giveMeASong","setState","playbackIntervalFn","newsong","i","note_to_push","Math","floor","random","j","push","k","prevProps","prevState","setInterval","length","clearInterval","audioContext","soundfontHostname","isLoading","playNote","stopNote","containerWidth","restart","Object","assign","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\nimport classNames from 'classnames';\n\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\n\nimport PianoConfig from './PianoConfig';\n\n\nconst instrument_list= [\n  \"accordion\", // F2 - A6\n  \"acoustic_grand_piano\", // da nominare come: gran piano \n  \"acoustic_guitar_nylon\", // da nominare come: classical guitar // E2 - B6\n  \"acoustic_guitar_steel\", // da nominare come: acoustic guitar // E2 - B6\n  \"alto_sax\", // C#3 - G#5 \n  \"banjo\", // C3 - A4\n  \"baritone_sax\", // C#2 - G#4\n  \"bassoon\",\n  \"celesta\", // C3 - F8\n  \"cello\",      \n  \"church_organ\", // C1 - C7\n  \"clarinet\",\n  \"contrabass\",\n  \"distortion_guitar\", // E2 - B6\n  \"electric_guitar_clean\", // E2 - B6\n  \"electric_piano_1\", // da nominare come: electric piano // stesso range del piano\n  \"english_horn\", // E3 - B5\n  \"flute\",\n  \"french_horn\", // da nominare come: horn \n  \"glockenspiel\", // F5 - D8\n  \"lead_1_square\", // full  range\n  \"lead_2_sawtooth\", // full  range\n  \"marimba\",// C2 - C7\n  \"oboe\",\n  \"piccolo\", // D5 - C8\n  \"recorder\", // F3 - G6\n  \"soprano_sax\", // G#3 - D#6\n  \"tenor_sax\", //G#2 - D#6\n  \"timpani\", // B1 - C4\n  \"trombone\",\n  \"trumpet\",\n  \"tuba\",\n  \"tubular_bells\", // F3 - F5\n  \"vibraphone\",\n  \"viola\",\n  \"violin\",\n  \"xylophone\" // F4 - C8\n] \n\nclass Keyboard extends React.Component {\n\n  state = {\n    song: [],\n    activeNotesIndex: 0,\n    isPlaying: false,\n    config: {\n      duration : 3,\n      instrumentName: 'acoustic_grand_piano',\n      noteRange: {\n        first: MidiNumbers.fromNote('c1'),\n        last: MidiNumbers.fromNote('b7'),\n      },\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.playbackIntervalFn = null;\n  }\n\n  giveMeASong () {\n    let newsong = [];\n    let last = this.state.config.noteRange.last;\n    let first = this.state.config.noteRange.first;\n    for (var i = 0; i < 10; i++) {\n      let note_to_push = Math.floor(Math.random() * (last - first) + first)\n      //duration selected\n      if (this.state.config.duration == 6) {\n        for (var j = 0; j < Math.floor(Math.random() * 5); j++) {\n          newsong.push([note_to_push]);\n        }\n      }else {\n        for (var k = 0; k < this.state.config.duration; k++) {\n          newsong.push([note_to_push]);\n        }\n      }\n      //add random pause\n      if (Math.random() * (2 - 0) + 0 > 1){\n        newsong.push([]);\n      }\n    }\n    this.setState({song: newsong})\n  }\n\n  \n  restart(){\n    this.setState({\n          activeNotesIndex: 0,\n        });\n    this.setState({ isPlaying: true });\n  }\n\n  setPlaying = (value) => {\n    if (value) { this.giveMeASong(); }\n    this.setState({ isPlaying: value });\n  };\n\n  componentDidMount(){\n    this.giveMeASong();\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.isPlaying !== this.state.isPlaying) {\n      if (this.state.isPlaying) {\n        this.playbackIntervalFn = setInterval(() => {\n          this.setState({\n            activeNotesIndex: (this.state.activeNotesIndex + 1) % this.state.song.length,\n          });\n        }, 200);\n      } else {\n        clearInterval(this.playbackIntervalFn);\n        this.setState({\n          activeNotesIndex: 0,\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <SoundfontProvider\n        audioContext={this.props.audioContext}\n        instrumentName={this.state.config.instrumentName}\n        hostname={this.props.soundfontHostname}\n        render={({ isLoading, playNote, stopNote }) => (\n        <div>\n          <DimensionsProvider height = '100px'>\n              {({ containerWidth }) => (\n                <Piano\n                  activeNotes={\n                      this.state.isPlaying ? this.state.song[this.state.activeNotesIndex] : []\n                    }\n                  noteRange={this.state.config.noteRange}\n                  playNote={playNote}\n                  stopNote={stopNote}\n                  width={containerWidth}\n                />\n              )}\n          </DimensionsProvider>\n          <div className=\"text-center\">\n          <div>\n            <button\n              className={classNames('btn', {\n                'btn-outline-info': !this.state.isPlaying,\n                'btn-outline-danger': this.state.isPlaying,\n              })}\n              onClick={() => this.setPlaying(!this.state.isPlaying)}\n            >\n              {this.state.isPlaying ? 'Stop' : 'Start'}\n            </button>\n\n            <button\n              className={classNames('btn', {\n                'btn-outline-info': !this.state.isPlaying,\n                'btn-outline-danger': this.state.isPlaying,\n              })}\n              onClick={() => this.restart()}\n              disabled={this.state.isPlaying}\n            >\n              {'restart' }\n            </button>\n\n          </div>\n        </div>\n          <PianoConfig\n              config={this.state.config}\n              setConfig={(config) => {\n                this.setState({\n                  config: Object.assign({}, this.state.config, config),\n                });\n              }}\n              instrumentList={instrument_list || [this.state.config.instrumentName]}\n              song={this.song}\n              duration = {this.state.config.duration}\n          />\n        </div>\n        )}\n      />\n       \n    );\n  }\n}\n\nexport default Keyboard;\n\n"]},"metadata":{},"sourceType":"module"}