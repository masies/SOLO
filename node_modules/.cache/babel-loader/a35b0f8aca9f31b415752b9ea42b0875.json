{"ast":null,"code":"import _classCallCheck from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/MS/Desktop/uni/stage/tiascolto/src/components/keyboard/PlaySong.js\";\nimport React from 'react';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport classNames from 'classnames';\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\n\nvar PlaybackDemo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlaybackDemo, _React$Component);\n\n  function PlaybackDemo(props) {\n    var _this;\n\n    _classCallCheck(this, PlaybackDemo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaybackDemo).call(this, props));\n    _this.state = {\n      activeNotesIndex: 0,\n      isPlaying: false,\n      stopAllNotes: function stopAllNotes() {\n        return console.warn('stopAllNotes not yet loaded');\n      }\n    };\n\n    _this.setPlaying = function (value) {\n      _this.setState({\n        isPlaying: value\n      });\n    };\n\n    _this.playbackIntervalFn = null;\n    return _this;\n  }\n\n  _createClass(PlaybackDemo, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (prevState.isPlaying !== this.state.isPlaying) {\n        if (this.state.isPlaying) {\n          this.playbackIntervalFn = setInterval(function () {\n            _this2.setState({\n              activeNotesIndex: (_this2.state.activeNotesIndex + 1) % _this2.props.song.length\n            });\n          }, 200);\n        } else {\n          clearInterval(this.playbackIntervalFn);\n          this.state.stopAllNotes();\n          this.setState({\n            activeNotesIndex: 0\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var noteRange = {\n        first: MidiNumbers.fromNote('c3'),\n        last: MidiNumbers.fromNote('f5')\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: classNames('btn', {\n          'btn-outline-info': !this.state.isPlaying,\n          'btn-outline-danger': this.state.isPlaying\n        }),\n        onClick: function onClick() {\n          return _this3.setPlaying(!_this3.state.isPlaying);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.isPlaying ? 'Stop' : 'Start'))), React.createElement(\"div\", {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(SoundfontProvider, {\n        audioContext: this.props.audioContext,\n        instrumentName: \"ocarina\",\n        hostname: this.props.soundfontHostname,\n        onLoad: function onLoad(_ref) {\n          var stopAllNotes = _ref.stopAllNotes;\n          return _this3.setState({\n            stopAllNotes: stopAllNotes\n          });\n        },\n        render: function render(_ref2) {\n          var isLoading = _ref2.isLoading,\n              playNote = _ref2.playNote,\n              stopNote = _ref2.stopNote,\n              stopAllNotes = _ref2.stopAllNotes;\n          return React.createElement(DimensionsProvider, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, function (_ref3) {\n            var containerWidth = _ref3.containerWidth;\n            return React.createElement(Piano, {\n              activeNotes: _this3.state.isPlaying ? _this3.props.song[_this3.state.activeNotesIndex] : [],\n              noteRange: noteRange,\n              width: containerWidth,\n              playNote: playNote,\n              stopNote: stopNote,\n              disabled: isLoading || !_this3.state.isPlaying,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PlaybackDemo;\n}(React.Component);\n\nexport default PlaybackDemo;","map":{"version":3,"sources":["/Users/MS/Desktop/uni/stage/tiascolto/src/components/keyboard/PlaySong.js"],"names":["React","Piano","MidiNumbers","classNames","DimensionsProvider","SoundfontProvider","PlaybackDemo","props","state","activeNotesIndex","isPlaying","stopAllNotes","console","warn","setPlaying","value","setState","playbackIntervalFn","prevProps","prevState","setInterval","song","length","clearInterval","noteRange","first","fromNote","last","audioContext","soundfontHostname","isLoading","playNote","stopNote","containerWidth","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport classNames from 'classnames';\n\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\n\nclass PlaybackDemo extends React.Component {\n  state = {\n    activeNotesIndex: 0,\n    isPlaying: false,\n    stopAllNotes: () => console.warn('stopAllNotes not yet loaded'),\n  };\n\n  constructor(props) {\n    super(props);\n    this.playbackIntervalFn = null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.isPlaying !== this.state.isPlaying) {\n      if (this.state.isPlaying) {\n        this.playbackIntervalFn = setInterval(() => {\n          this.setState({\n            activeNotesIndex: (this.state.activeNotesIndex + 1) % this.props.song.length,\n          });\n        }, 200);\n      } else {\n        clearInterval(this.playbackIntervalFn);\n        this.state.stopAllNotes();\n        this.setState({\n          activeNotesIndex: 0,\n        });\n      }\n    }\n  }\n\n  setPlaying = (value) => {\n    this.setState({ isPlaying: value });\n  };\n\n  render() {\n    const noteRange = {\n      first: MidiNumbers.fromNote('c3'),\n      last: MidiNumbers.fromNote('f5'),\n    };\n\n    return (\n      <div>\n        <div className=\"text-center\">\n          <div>\n            <button\n              className={classNames('btn', {\n                'btn-outline-info': !this.state.isPlaying,\n                'btn-outline-danger': this.state.isPlaying,\n              })}\n              onClick={() => this.setPlaying(!this.state.isPlaying)}\n            >\n              {this.state.isPlaying ? 'Stop' : 'Start'}\n            </button>\n          </div>\n        </div>\n        <div className=\"mt-4\">\n          <SoundfontProvider\n            audioContext={this.props.audioContext}\n            instrumentName=\"ocarina\"\n            hostname={this.props.soundfontHostname}\n            onLoad={({ stopAllNotes }) => this.setState({ stopAllNotes })}\n            render={({ isLoading, playNote, stopNote, stopAllNotes }) => (\n              <DimensionsProvider>\n                {({ containerWidth }) => (\n                  <Piano\n                    activeNotes={\n                      this.state.isPlaying ? this.props.song[this.state.activeNotesIndex] : []\n                    }\n                    noteRange={noteRange}\n                    width={containerWidth}\n                    playNote={playNote}\n                    stopNote={stopNote}\n                    disabled={isLoading || !this.state.isPlaying}\n                  />\n                )}\n              </DimensionsProvider>\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlaybackDemo;\n"]},"metadata":{},"sourceType":"module"}