{"ast":null,"code":"import _classCallCheck from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/MS/Desktop/uni/stage/tiascolto/src/components/solution/Solution.js\";\nimport React from 'react';\nimport './Solution.css';\nimport NoteGuess from './NoteGuess/NoteGuess';\n\nvar Solution =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Solution, _React$Component);\n\n  function Solution(props) {\n    var _this;\n\n    _classCallCheck(this, Solution);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Solution).call(this, props));\n\n    _this.onClickFunction = function (idx) {\n      _this.setState({\n        activeComponent: idx\n      });\n\n      console.log(\"active div is : \" + _this.state.activeComponent);\n    };\n\n    _this.state = {\n      components: [],\n      activeComponent: -1\n    };\n    return _this;\n  }\n\n  _createClass(Solution, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, [0, 1, 2, 3, 4, 5].map(function (component, index) {\n        return React.createElement(NoteGuess, {\n          className: \"segmentsList\".concat(_this2.state.activeWord === index ? ' selected' : ''),\n          key: index,\n          onClick: _this2.onClickFunction.bind(null, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Solution;\n}(React.Component);\n\nexport default Solution;","map":{"version":3,"sources":["/Users/MS/Desktop/uni/stage/tiascolto/src/components/solution/Solution.js"],"names":["React","NoteGuess","Solution","props","onClickFunction","idx","setState","activeComponent","console","log","state","components","map","component","index","activeWord","bind","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;IAGMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACb,kFAAMA,KAAN;;AADa,UAQnBC,eARmB,GAQD,UAACC,GAAD,EAAS;AACzB,YAAKC,QAAL,CAAc;AAACC,QAAAA,eAAe,EAAEF;AAAlB,OAAd;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqB,MAAKC,KAAL,CAAWH,eAA5C;AACD,KAXkB;;AAEb,UAAKG,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXJ,MAAAA,eAAe,EAAE,CAAC;AAFP,KAAb;AAFa;AAMlB;;;;6BASQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAcK,GAAd,CAAkB,UAACC,SAAD,EAAWC,KAAX,EAAqB;AACrC,eAAO,oBAAC,SAAD;AACP,UAAA,SAAS,wBAAiB,MAAI,CAACJ,KAAL,CAAWK,UAAX,KAA0BD,KAA1B,GAAkC,WAAlC,GAAgD,EAAjE,CADF;AAEP,UAAA,GAAG,EAAEA,KAFE;AAEK,UAAA,OAAO,EAAE,MAAI,CAACV,eAAL,CAAqBY,IAArB,CAA0B,IAA1B,EAAgCF,KAAhC,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,OALC,CAFF,CADF;AAYD;;;;EA7BoBd,KAAK,CAACiB,S;;AAgC7B,eAAef,QAAf","sourcesContent":["import React from 'react';\nimport './Solution.css';\nimport NoteGuess from './NoteGuess/NoteGuess';\n\n\nclass Solution extends React.Component {\n  constructor(props) {\n        super(props);\n        this.state = { \n          components: [], \n          activeComponent: -1 \n        }\n  }\n\n  onClickFunction = (idx) => {\n    this.setState({activeComponent: idx})\n    console.log(\"active div is : \" + this.state.activeComponent);\n  }\n\n\n\n  render() {\n    return (\n      <div>\n      {\n        [0,1,2,3,4,5].map((component,index) => {\n          return <NoteGuess \n          className={`segmentsList${this.state.activeWord === index ? ' selected' : ''}`}\n          key={index} onClick={this.onClickFunction.bind(null, index)}\n          />\n      })\n      }\n      </div>\n      );\n  }\n}\n\nexport default Solution;"]},"metadata":{},"sourceType":"module"}