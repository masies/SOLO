{"ast":null,"code":"import _objectWithoutProperties from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/MS/Desktop/uni/stage/tiascolto/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/MS/Desktop/uni/stage/tiascolto/src/components/keyboard/PianoConfig.js\";\nimport React from 'react';\nimport { MidiNumbers } from 'react-piano';\n\nvar AutoblurSelect =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoblurSelect, _React$Component);\n\n  function AutoblurSelect(props) {\n    var _this;\n\n    _classCallCheck(this, AutoblurSelect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoblurSelect).call(this, props));\n\n    _this.onChange = function (event) {\n      _this.props.onChange(event);\n\n      _this.selectRef.current.blur();\n    };\n\n    _this.selectRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(AutoblurSelect, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          onChange = _this$props.onChange,\n          otherProps = _objectWithoutProperties(_this$props, [\"children\", \"onChange\"]);\n\n      return React.createElement(\"select\", Object.assign({}, otherProps, {\n        onChange: this.onChange,\n        ref: this.selectRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), children);\n    }\n  }]);\n\n  return AutoblurSelect;\n}(React.Component);\n\nfunction Label(props) {\n  return React.createElement(\"small\", {\n    className: \"mb-1 text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.children);\n}\n\nvar PianoConfig =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(PianoConfig, _React$Component2);\n\n  function PianoConfig() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, PianoConfig);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PianoConfig)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this2.onChangeFirstNote = function (event) {\n      _this2.props.setConfig({\n        noteRange: {\n          first: parseInt(event.target.value, 10),\n          last: _this2.props.config.noteRange.last\n        }\n      });\n    };\n\n    _this2.onChangeLastNote = function (event) {\n      _this2.props.setConfig({\n        noteRange: {\n          first: _this2.props.config.noteRange.first,\n          last: parseInt(event.target.value, 10)\n        }\n      });\n    };\n\n    _this2.onChangeInstrument = function (event) {\n      _this2.props.setConfig({\n        instrumentName: event.target.value\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(PianoConfig, [{\n    key: \"render\",\n    value: function render() {\n      var midiNumbersToNotes = MidiNumbers.NATURAL_MIDI_NUMBERS.reduce(function (obj, midiNumber) {\n        obj[midiNumber] = MidiNumbers.getAttributes(midiNumber).note;\n        return obj;\n      }, {});\n      var _this$props$config = this.props.config,\n          noteRange = _this$props$config.noteRange,\n          instrumentName = _this$props$config.instrumentName;\n      return React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"First note\"), React.createElement(AutoblurSelect, {\n        className: \"form-control\",\n        onChange: this.onChangeFirstNote,\n        value: noteRange.first,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, MidiNumbers.NATURAL_MIDI_NUMBERS.map(function (midiNumber) {\n        return React.createElement(\"option\", {\n          value: midiNumber,\n          disabled: midiNumber >= noteRange.last || midiNumber < 20,\n          key: midiNumber,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, midiNumbersToNotes[midiNumber]);\n      }))), React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Last note\"), React.createElement(AutoblurSelect, {\n        className: \"form-control\",\n        onChange: this.onChangeLastNote,\n        value: noteRange.last,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, MidiNumbers.NATURAL_MIDI_NUMBERS.map(function (midiNumber) {\n        return React.createElement(\"option\", {\n          value: midiNumber,\n          disabled: midiNumber <= noteRange.first || midiNumber > 109,\n          key: midiNumber,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, midiNumbersToNotes[midiNumber]);\n      }))), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Instrument\"), React.createElement(AutoblurSelect, {\n        className: \"form-control\",\n        value: instrumentName,\n        onChange: this.onChangeInstrument,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.props.instrumentList.map(function (value) {\n        return React.createElement(\"option\", {\n          value: value,\n          key: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, value);\n      }))));\n    }\n  }]);\n\n  return PianoConfig;\n}(React.Component);\n\nexport default PianoConfig;","map":{"version":3,"sources":["/Users/MS/Desktop/uni/stage/tiascolto/src/components/keyboard/PianoConfig.js"],"names":["React","MidiNumbers","AutoblurSelect","props","onChange","event","selectRef","current","blur","createRef","children","otherProps","Component","Label","PianoConfig","onChangeFirstNote","setConfig","noteRange","first","parseInt","target","value","last","config","onChangeLastNote","onChangeInstrument","instrumentName","midiNumbersToNotes","NATURAL_MIDI_NUMBERS","reduce","obj","midiNumber","getAttributes","note","map","instrumentList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MidiNumbers } from 'react-piano';\n\nclass AutoblurSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectRef = React.createRef();\n  }\n\n  onChange = (event) => {\n    this.props.onChange(event);\n    this.selectRef.current.blur();\n  };\n\n  render() {\n    const { children, onChange, ...otherProps } = this.props;\n    return (\n      <select {...otherProps} onChange={this.onChange} ref={this.selectRef}>\n        {children}\n      </select>\n    );\n  }\n}\n\nfunction Label(props) {\n  return <small className=\"mb-1 text-muted\">{props.children}</small>;\n}\n\nclass PianoConfig extends React.Component {\n  onChangeFirstNote = (event) => {\n    this.props.setConfig({\n      noteRange: {\n        first: parseInt(event.target.value, 10),\n        last: this.props.config.noteRange.last,\n      },\n    });\n  };\n\n  onChangeLastNote = (event) => {\n    this.props.setConfig({\n      noteRange: {\n        first: this.props.config.noteRange.first,\n        last: parseInt(event.target.value, 10),\n      },\n    });\n  };\n\n  onChangeInstrument = (event) => {\n    this.props.setConfig({\n      instrumentName: event.target.value,\n    });\n  };\n\n  render() {\n    const midiNumbersToNotes = MidiNumbers.NATURAL_MIDI_NUMBERS.reduce((obj, midiNumber) => {\n      obj[midiNumber] = MidiNumbers.getAttributes(midiNumber).note;\n      return obj;\n    }, {});\n    const { noteRange, instrumentName } = this.props.config;\n\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-3\">\n          <Label>First note</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            onChange={this.onChangeFirstNote}\n            value={noteRange.first}\n          >\n            {MidiNumbers.NATURAL_MIDI_NUMBERS.map((midiNumber) => (\n              <option value={midiNumber} disabled={midiNumber >= noteRange.last || midiNumber < 20} key={midiNumber}>\n                {midiNumbersToNotes[midiNumber]}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col-3\">\n          <Label>Last note</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            onChange={this.onChangeLastNote}\n            value={noteRange.last}\n          >\n            {MidiNumbers.NATURAL_MIDI_NUMBERS.map((midiNumber) => (\n              <option value={midiNumber} disabled={midiNumber <= noteRange.first || midiNumber > 109} key={midiNumber}>\n                {midiNumbersToNotes[midiNumber]}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col-6\">\n          <Label>Instrument</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            value={instrumentName}\n            onChange={this.onChangeInstrument}\n          >\n            {this.props.instrumentList.map((value) => (\n              <option value={value} key={value}>\n                {value}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PianoConfig;\n"]},"metadata":{},"sourceType":"module"}